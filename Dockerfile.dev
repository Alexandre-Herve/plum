FROM bitwalker/alpine-erlang:19.3

ENV HOME=/opt/app/ TERM=xterm
ENV ELIXIR_VERSION=v1.5.1

# Install the magic docker wrapper.
ADD ./wrapdocker /usr/local/bin/wrapdocker

# Install Docker and dependencies
RUN apk --update add \
  bash \
  iptables \
  ca-certificates \
  e2fsprogs \
  docker \
  && chmod +x /usr/local/bin/wrapdocker \
  && rm -rf /var/cache/apk/*

# Define additional metadata for our docker image.
VOLUME /var/lib/docker

# Install awscli
RUN \
	mkdir -p /aws && \
	apk -Uuv add groff less python py-pip && \
	pip install awscli && \
	apk --purge -v del py-pip && \
	rm /var/cache/apk/*


# Install Elixir and basic build dependencies
WORKDIR /tmp/elixir-build

RUN \
    apk update && \
    apk upgrade && \
    apk --update upgrade musl && \
    apk --no-cache add nodejs nodejs-npm git inotify-tools g++ python erlang-dialyzer erlang-dev make && \
		apk add --no-cache --update --virtual .elixir-build && \
		git clone https://github.com/elixir-lang/elixir --depth 1 --branch $ELIXIR_VERSION && \
    cd elixir && \
    make && make install && \
		mix local.hex --force && \
    mix local.rebar --force && \
    cd $HOME && \
    apk add -U --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing aufs-util && \
   	rm -rf /tmp/elixir-build && \
    apk del .elixir-build && \
		rm -rf /var/cache/apk/*

WORKDIR ${HOME}

# Cache elixir deps
RUN mkdir config
COPY config/* config/
COPY mix.exs mix.lock ./
RUN mix do deps.get, deps.compile

# Cache node deps
COPY assets/package.json ./assets/
RUN cd ./assets && npm install

COPY . .

RUN cd ./assets \
    && ./node_modules/.bin/webpack \
    && cd .. \
    && mix phx.digest \
		&& mix clean \
		&& mix compile

CMD ["mix", "phoenix.server"]
