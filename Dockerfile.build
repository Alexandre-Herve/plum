FROM bitwalker/alpine-erlang:19.3

ENV HOME=/opt/app/ TERM=xterm
ENV ELIXIR_VERSION=v1.5.1

WORKDIR /tmp/elixir-build

# Install Elixir and basic build dependencies
RUN \
    apk update && \
    apk upgrade && \
    apk --update upgrade musl && \
    apk --no-cache add nodejs nodejs-npm git inotify-tools g++ python erlang-dialyzer erlang-dev make && \
		apk add --no-cache --update --virtual .elixir-build && \

		git clone https://github.com/elixir-lang/elixir --depth 1 --branch $ELIXIR_VERSION && \
    cd elixir && \
    make && make install && \
		mix local.hex --force && \
    mix local.rebar --force && \
    cd $HOME && \

   	rm -rf /tmp/elixir-build && \
    apk del .elixir-build && \
		rm -rf /var/cache/apk/*

WORKDIR ${HOME}

ENV MIX_ENV=prod

# Cache elixir deps
RUN mkdir config
COPY config/* config/
COPY mix.exs mix.lock ./
RUN mix do deps.get, deps.compile

# Cache node deps
COPY assets/package.json ./assets/
RUN cd ./assets && npm install

COPY . .

RUN cd ./assets && ./node_modules/brunch/bin/brunch b -p && \
		cd .. && \
    mix phx.digest

RUN mix release --env=prod --verbose
